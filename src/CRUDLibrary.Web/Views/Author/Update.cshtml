@model CRUDLibrary.Domain.Models.UpdateAuthorResponse

@{
    ViewData["Title"] = "Update";
}

<h1>Update</h1>

<h4>Author</h4>
<hr />
<form asp-action="Update">
<div class="row">
    <div class="col-md-4">
        <div id="ErrorMessages" class="alert-message-div">
                @if(Model.ERROR_MESSAGES.Count() > 0){ 
                    @Html.Raw(Model.DisplayErrorMessages());
                }
            </div>
            <div id="SuccessMessages" class="alert-message-div alert-success">
                @if (Model.SUCCESS_MESSAGES.Count() > 0)
                {
                    @Html.Raw(Model.DisplaySuccessMessages());
                }
            </div>
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <input type="hidden" asp-for="AUTHOR_ID" />
            <div class="form-group">
                <label asp-for="AUTHOR_NAME" class="control-label"></label>
                <input asp-for="AUTHOR_NAME" class="form-control" />
                <span asp-validation-for="AUTHOR_NAME" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="AUTHOR_BORN" class="control-label"></label>
                <input asp-for="AUTHOR_BORN" class="form-control" />
                <span asp-validation-for="AUTHOR_BORN" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="AUTHOR_DIED" class="control-label"></label>
                <input asp-for="AUTHOR_DIED" class="form-control" />
                <span asp-validation-for="AUTHOR_DIED" class="text-danger"></span>
            </div>
            <div class="form-group">
                <input type="submit" value="Save" class="btn btn-primary" />
            </div>
        
    </div>
</div>
</form>
<div>
    <a asp-action="Index">Back to List</a>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
