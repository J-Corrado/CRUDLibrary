
@model CRUDLibrary.Domain.Models.AddBookBorrowerResponse

@{
    ViewData["Title"] = "AddBorrow";
}

<h1>Add Book</h1>

<h4>Borrowed Book</h4>
<hr />
<form id="AddBookBorrowerForm">
    
    <div class="row">
    <div class="col-md-4">
    <h5>Borrower</h5>
    <h6>@Model.BORROWER_NAME</h6>

    <div validation-summary="ModelOnly" class="text-danger"></div>
    <input type="hidden" asp-for="BORROWER_ID"/>

    <div class="form-group">
        <label asp-for="BOOK_ID">Book</label>
        <select asp-for="BOOK_ID" id="BOOK_ID" name="BOOK_ID" asp-items="@(new SelectList(Model.BOOKS, "ID", "TITLE"))" class="form-control">
            <option value="">Select an existing book</option>
        </select>
        <span validation-for="BOOK_ID" class="text-danger"></span>
    </div>
    <div class="form-group">
        <label for="BOOK_TITLE">Or enter a new book name</label>
        <input asp-for="BOOK_TITLE" id="BOOK_TITLE" name="BOOK_TITLE" type="text" class="form-control"/>
        <span validation-for="BOOK_TITLE" class="text-danger"></span>
    </div>
    <div class="form-group">
        <label for="BOOK_GENRE" class="control-label">Genre</label>
        <select asp-for="BOOK_GENRE" id="BOOK_GENRE" name="BOOK_GENRE" asp-items="@(new SelectList(Model.GENRES, "ID", "NAME"))" class="form-control">
            <option value="">Select Genre</option>
        </select>
        <span validation-for="BOOK_GENRE" class="text-danger"></span>
    </div>
    <div class="form-group">
        <label for="BOOK_PUB_DATE" class="control-label"></label>
        <input asp-for="BOOK_PUB_DATE" id="BOOK_PUB_DATE" name="BOOK_PUB_DATE" type="date" class="form-control"/>
        <span validation-for="BOOK_PUB_DATE" class="text-danger"></span>
    </div>
    <br/>
    <div class="form-group">
        <button type="button" id="AddBookBorrowerSubmit" class="btn btn-primary">Add</button>
    </div>
    </div>
</div>
</form>
<div>
    <a asp-action="Index">Back to List</a>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
<script>
    
    $('#AddBookBorrowerSubmit').on('click',function(){
        EnableLoader();
        var sendD = JSON.parse($('#AddBookBorrowerForm').serializeJSON());
        $.ajax({
            url: RootURL() + 'Borrower/AddBorrow/' + @Model.BORROWER_ID,
            type: 'POST',
            dataType: 'json',
            contentType: 'application/json; charset=utf-8',
            cache: false,
            data: JSON.stringify(sendD),
            success: function (resp) {
                if(resp.ERROR_MESSAGES.length == 0)
                {
                    sessionStorage.setItem("MESSAGE", JSON.stringify(resp.SUCCESS_MESSAGES));
                    window.location.href = RootURL() + 'Borrower/View/' + resp.BORROWER_ID.toString();
                } 
                else 
                {
                    DisableLoader();
                    $('#ErrorMessages').AddMessages(resp.ERROR_MESSAGES);
                }
            },
            error: function (r) 
            {
                DisableLoader();
            }
        });
      });
</script>
